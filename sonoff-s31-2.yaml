# Basic Config
esphome:
  name: sonoff-s31-2
  platform: ESP8266
  board: esp01_1m

wifi:
  ssid: "kni"
  password: !secret kni_pw
  manual_ip:
    static_ip: 192.168.85.17
    gateway: 192.168.84.1
    subnet: 255.255.240.0
    dns1: 192.168.94.1

mqtt:
  broker: !secret mqtt_office_broker
  username: !secret mqtt_office_user
  password: !secret mqtt_office_pw

logger:
  baud_rate: 0 # (UART logging interferes with cse7766)
api:
ota:

# Device Specific Config

uart:
  rx_pin: RX
  baud_rate: 4800

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    name: "Sonoff S31 Button"
    on_press:
      - switch.toggle: relay
  - platform: status
    name: "Sonoff S31 Status"

sensor:
  - platform: wifi_signal
    name: "Sonoff S31 WiFi Signal"
    update_interval: 60s
  - platform: cse7766
    update_interval: 5s
    current:
      name: "Sonoff S31 Current"
      accuracy_decimals: 4
      id: my_current
    voltage:
      name: "Sonoff S31 Voltage"
      accuracy_decimals: 1
      id: my_voltage
    power:
      name: "Sonoff S31 Power"
      accuracy_decimals: 2
      id: my_power
    # This is only used as a trigger to send the mqtt messages, as this is when
    # all the other sensors have been read.
    energy:
      name: "Sonoff S31 Total energy"
      on_value:
        then:
          - mqtt.publish:
              topic: sensors/sonoff-s31-2
              payload: !lambda |-
                char str[1024];
                snprintf(str, sizeof(str)/sizeof(char), "{ \"power_w\": %lf, \"current_a\": %lf, \"voltage_v_rms\":%lf }",
                    id(my_power).state, id(my_current).state, id(my_voltage).state);
                return str;

  - platform: total_daily_energy
    name: "Sonoff S31 Daily Energy"
    power_id: my_power

switch:
  - platform: gpio
    name: "Sonoff S31 Relay"
    pin: GPIO12
    id: relay

time:
  - platform: sntp
    id: my_time

status_led:
  pin: GPIO13
