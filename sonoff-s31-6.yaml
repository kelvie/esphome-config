# Basic Config
esphome:
  name: sonoff-s31-6
  platform: ESP8266
  board: esp01_1m
wifi:
  ssid: "kni"
  password: !secret kni_pw
  manual_ip:
    static_ip: 192.168.85.21
    gateway: 192.168.84.1
    subnet: 255.255.240.0
    dns1: 192.168.94.1
mqtt:
  broker: !secret mqtt_office_broker
  username: !secret mqtt_office_user
  password: !secret mqtt_office_pw
logger:
  baud_rate: 0 # (UART logging interferes with cse7766)
ota:
# Device Specific Config

# counters sometimes get stuck, fix this by restarting every day
button:
  - platform: restart
    name: Restart
    id: restart_button
uart:
  rx_pin: RX
  baud_rate: 4800
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    name: "Sonoff S31 Button"
    on_press:
      - switch.toggle: relay
  - platform: status
    name: "Sonoff S31 Status"
sensor:
  - platform: wifi_signal
    name: "Sonoff S31 WiFi Signal"
    update_interval: 60s
  - platform: cse7766
    update_interval: 5s
    current:
      name: "Sonoff S31 Current"
      accuracy_decimals: 4
      id: my_current
    voltage:
      name: "Sonoff S31 Voltage"
      accuracy_decimals: 1
      id: my_voltage
    power:
      name: "Sonoff S31 Power"
      accuracy_decimals: 2
      id: my_power
    # This is only used as a trigger to send the mqtt messages, as this is when
    # all the other sensors have been read.
    energy:
      name: "Sonoff S31 Total energy"
      on_value:
        then:
          - mqtt.publish_json:
              topic: sensors/sonoff-s31-6
              payload: !lambda |-
                root["power_w"] = id(my_power).state;
                root["current_a"] = id(my_current).state;
                root["voltage_v"] = id(my_voltage).state;
                root["energy_wh"] = x;
  - platform: total_daily_energy
    name: "Sonoff S31 Daily Energy"
    power_id: my_power
switch:
  - platform: gpio
    name: "Sonoff S31 Relay"
    pin: GPIO12
    id: relay
    restore_mode: ALWAYS_ON
time:
  - platform: sntp
    id: my_time
    on_time:
      - seconds: 0
        minutes: 0
        hours: 0
        then:
          - button.press: restart_button
status_led:
  pin: GPIO13
