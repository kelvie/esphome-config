esphome:
  name: m5stick-c1
  platform: ESP32
  board: m5stick-c
  libraries:
    - SPI
    - Wire
    - adafruit/Adafruit BusIO
    - adafruit/Adafruit seesaw Library
  includes:
    - neokey.h

external_components:
  - source:
      type: git
      url: https://github.com/crowbarz/esphome-m5stickC
      ref: crowbarz-colorutil


# Enable logging
logger:
  level: INFO

ota:
  password: ""

mqtt:
  broker: kelvie-lws.lan
  username: m5stickc1
  password: !secret mqtt_m5stickc1_pw
  id: mqtt_client

text_sensor:
  - platform: mqtt_subscribe
    id: usbstatus
    topic: office/usbstatus

i2c:
  # Grove header, will be used by Wire
  - id: bus_a
    sda: GPIO26
    scl: GPIO25
    scan: true

  - id: internal_i2c
    sda: GPIO21
    scl: GPIO22
    scan: True

wifi:
  ssid: "kni"
  password: !secret kni_pw


# AXP192 power management - must be present to use 5v power for neokey
sensor:
  - platform: axp192
    address: 0x34
    i2c_id: internal_i2c
    update_interval: 30s
    battery_level:
      name: "M5Stick Battery Level"
      id: "m5stick_batterylevel"

binary_sensor:
  - platform: gpio
    id: button1
    pin:
      number: GPIO37
      inverted: true
    filters: &button_filters
      delayed_off: 30ms
    on_release:
      then:
        - mqtt.publish:
            topic: m5stick-c/button1
            payload: ding

  - platform: gpio
    id: button2
    pin:
      number: GPIO39
      inverted: true
    filters:
      <<: *button_filters
    on_release:
      then:
        - mqtt.publish:
            topic: office/usbswitch
            payload: click

  - platform: template
    id: neo1
    filters:
      <<: *button_filters
    on_click: &click_defaults
      min_length: 40ms
      then:
        - mqtt.publish:
            topic: office/usbswitch
            payload: click

  - platform: template
    id: neo2
    on_click:
      <<: *click_defaults
      then:
        - mqtt.publish:
            topic: nanlink/ch4
            payload: dim_up 5

    on_double_click: &doubleclick_defaults
      min_length: 20ms
      max_length: 150ms
      then:
        - mqtt.publish:
            topic: nanlink/ch4
            payload: dim_up 40

  - platform: template
    id: neo3
    on_click:
      <<: *click_defaults
      then:
        - mqtt.publish:
            topic: nanlink/ch4
            payload: dim_down 5

    on_double_click:
      <<: *doubleclick_defaults
      then:
        - mqtt.publish:
            topic: nanlink/ch4
            payload: dim_down 120

  - platform: template
    id: neo4
    filters:
      <<: *button_filters
    on_release:
      then:
        - mqtt.publish:
            topic: nanlink/ch4
            payload: dim_down 120

custom_component:
  - lambda: |-
      // LED color is first argument
      // Then the 4 BinarySensors to set the button states
      return {new NeoKey1x4Component(
          0x000000, id(neo1), id(neo2), id(neo3), id(neo4))};
    components:
      - id: neokey1x4

output:
  - platform: ledc
    pin:
      number: GPIO10
      inverted: true
    id: gpio_10

light:
  - platform: monochromatic
    output: gpio_10
    id: red_led

font:
  - file: 'font.ttf'
    id: font1
    size: 8

  - file: 'font.ttf'
    id: font2
    size: 24

  - file: 'font.ttf'
    id: font3
    size: 14

spi:
  clk_pin: GPIO13
  mosi_pin: GPIO15

# builtin 80x160 TFT
display:
  - platform: st7735
    cs_pin: GPIO5
    dc_pin: GPIO23
    reset_pin: GPIO18
    rotation: 0
    lambda: |-
      it.print(it.get_width() / 2, it.get_height(), id(font3), ST77XX_WHITE, TextAlign::BOTTOM_CENTER, "Kill");
      it.print(it.get_width(), it.get_height() / 2, id(font3), ST77XX_WHITE, TextAlign::CENTER_RIGHT, "USB");
      it.printf(it.get_width() / 2, 0, id(font3), ST77XX_WHITE, TextAlign::TOP_CENTER, "BAT%.0f%%", id(m5stick_batterylevel).state);
      if (id(usbstatus).has_state()) {
          it.printf(0, it.get_height() / 2, id(font3), ST77XX_WHITE, TextAlign::CENTER_LEFT, id(usbstatus).state.c_str());
      }
